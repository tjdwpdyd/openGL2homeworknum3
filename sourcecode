#include <GL/glut.h>

// 공의 위치와 속도, 가속도 및 기타 설정 변수들
float ballY = 1.5f;           // 공의 초기 높이
float velocityY = 0.01f;      // 초기 속도
const float gravity = -0.0005f; // 중력 가속도
const float elasticity = 0.8f;  // 탄성 계수 (반동 정도)
bool isWireframe = false;     // 와이어프레임 모드 상태

// 바닥 그리기
void drawGround() {
    glPushMatrix();
    glTranslatef(0.0f, -0.5f, 0.0f); // 바닥을 더 아래로 위치
    glScalef(3.0f, 0.1f, 1.0f);      // 바닥 크기 조정
    glutSolidCube(1.0f);
    glPopMatrix();
}

// 공 그리기
void drawBall() {
    float stretchFactorX = 1.0f;
    float stretchFactorY = 1.0f;

    // 탄성 변형 (바닥에 닿으면 좌우로 늘어나고, 튀어오를 때 상하로 길어짐)
    if (ballY <= -0.3f) {
        stretchFactorX = 1.2f;
        stretchFactorY = 0.8f;
    }
    else if (velocityY > 0) {
        stretchFactorX = 0.8f;
        stretchFactorY = 1.2f;
    }

    glPushMatrix();
    glTranslatef(0.0f, ballY, 0.0f);   // 공의 위치 설정
    glScalef(stretchFactorX, stretchFactorY, 1.0f); // 공의 변형 설정
    glutSolidSphere(0.2f, 20, 20);     // 공 그리기
    glPopMatrix();
}

// 애니메이션 업데이트 함수
void update(int value) {
    // 공이 바닥에 닿으면 반동 효과 적용
    if (ballY <= -0.3f && velocityY < 0) {
        velocityY = -velocityY * elasticity; // 반동 속도 설정 (탄성 고려)
        ballY = -0.3f;  // 공이 바닥에 닿으면 위치 고정
    }
    else {
        // 공이 떨어질 때 중력 적용
        velocityY += gravity;
        ballY += velocityY;
    }

    glutPostRedisplay();            // 화면 갱신 요청
    glutTimerFunc(16, update, 0);   // 16ms 간격으로 업데이트 (약 60fps)
}

// 화면에 그리기
void display() {
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT); // 화면 초기화
    glLoadIdentity();

    drawGround(); // 바닥 그리기
    drawBall();   // 공 그리기

    glutSwapBuffers(); // 화면 버퍼 교체
}

// 키보드 입력 처리
void handleKeypress(unsigned char key, int x, int y) {
    if (key == 'w' || key == 'W') {
        isWireframe = !isWireframe;
        if (isWireframe) {
            glPolygonMode(GL_FRONT_AND_BACK, GL_LINE); // 와이어프레임 모드로 전환
        }
        else {
            glPolygonMode(GL_FRONT_AND_BACK, GL_FILL); // 솔리드 모드로 전환
        }
    }
}

// 초기화 함수
void init() {
    glEnable(GL_DEPTH_TEST);  // 깊이 테스트 활성화
    glClearColor(0.2f, 0.3f, 0.3f, 1.0f); // 배경색 설정
}

// 메인 함수
int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
    glutInitWindowSize(800, 600); // 창 크기 설정
    glutCreateWindow("Bouncing Elastic Ball"); // 창 제목 설정

    init(); // 초기화 함수 호출

    glutDisplayFunc(display); // 디스플레이 콜백 설정
    glutKeyboardFunc(handleKeypress); // 키보드 입력 콜백 설정
    glutTimerFunc(16, update, 0); // 타이머 콜백 설정

    glutMainLoop(); // 메인 루프 실행
    return 0;
}
